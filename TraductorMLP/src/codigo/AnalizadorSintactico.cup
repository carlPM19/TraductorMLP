package codigo;

import java_cup.runtime.Symbol;

parser code
{:
    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
}
:};

terminal Comentarios, Linea, Comillas, T_dato, Int, Cadena, Incrementar, Set, Puts, Expr, If, 
    Return, Break, Continue, Else, Do, While, For, Switch,
    Default, Proc, Igual, Op_aritmetico, Op_logico, Op_relacional,
    Op_atribucion, Op_incremento, Op_booleano, Parentesis_a, Parentesis_c,
    Llave_a, Llave_c, Corchete_a, Corchete_c, Main, P_coma, Identificador,
    Numero, Dolar, ERROR;

non terminal INICIO, SENTENCIA, DECLARACION, DECLARACION_FOR, IF, IF_ELSE,
    SWITCH, WHILE, DO_WHILE, FOR, SENTENCIA_BOOLEANA, SENTENCIA_FOR, 
    SENTENCIA_SWITCH, PRINT, EXPRESIONES,
    PROC;

start with INICIO;

INICIO ::= SENTENCIA
;
SENTENCIA ::= 
    Comentarios |
    SENTENCIA DECLARACION |
    DECLARACION |
    IF |
    SENTENCIA IF |
    SWITCH |
    SENTENCIA SWITCH |
    SENTENCIA IF_ELSE |
    IF_ELSE |
    SENTENCIA WHILE |
    WHILE |
    SENTENCIA DO_WHILE
    DO_WHILE |
    SENTENCIA FOR |
    FOR |
    SENTENCIA PRINT |
    PRINT |
    SENTENCIA PROC |
    PROC
;
DECLARACION ::= 
    Set Identificador Numero |
    Set Identificador Identificador |
    Set Identificador Corchete_a Expr Dolar Identificador Op_aritmetico Dolar Identificador Corchete_c |
    Set Identificador Corchete_a Expr Dolar Identificador Op_aritmetico Numero Corchete_c |
    Set Identificador Corchete_a Expr Llave_a Dolar Identificador Op_aritmetico Numero Llave_c Corchete_c 
;
IF ::= If Llave_a SENTENCIA_BOOLEANA Llave_c Llave_a SENTENCIA Llave_c |
If Llave_a SENTENCIA_BOOLEANA Llave_c Llave_a SENTENCIA Break Llave_c |
If Llave_a SENTENCIA_BOOLEANA Llave_c Llave_a SENTENCIA Continue Llave_c |
If Llave_a SENTENCIA_BOOLEANA Llave_c Llave_a Continue Llave_c |
If Llave_a SENTENCIA_BOOLEANA Llave_c Llave_a Break Llave_c 
;
SENTENCIA_BOOLEANA ::=
    Dolar Identificador Op_relacional Numero |
    Dolar Identificador Op_relacional Dolar Identificador |
    Op_booleano | 
    Identificador Op_relacional Op_booleano |
    Identificador Op_relacional Numero |
    Identificador Op_relacional Identificador |
    Identificador Op_relacional Comillas Comillas |
    Identificador Op_relacional Comillas Identificador Comillas
;
IF_ELSE ::= If Parentesis_a SENTENCIA_BOOLEANA Parentesis_c Llave_a SENTENCIA Llave_c Else Llave_a SENTENCIA Llave_c
;
WHILE ::= While Llave_a SENTENCIA_BOOLEANA Llave_c Llave_a SENTENCIA Llave_c |
While Comillas SENTENCIA_BOOLEANA Comillas Llave_a SENTENCIA Llave_c 
;
DO_WHILE ::= Do Llave_a SENTENCIA Llave_c While Parentesis_a SENTENCIA_BOOLEANA Parentesis_c P_coma
;
FOR ::= For Llave_a SENTENCIA Llave_c Llave_a SENTENCIA_BOOLEANA Llave_c Llave_a Incrementar Identificador Llave_c Llave_a SENTENCIA Llave_c
;

SENTENCIA_FOR ::=
    T_dato Identificador Igual Numero P_coma SENTENCIA_BOOLEANA P_coma DECLARACION_FOR |
    Identificador Igual Numero P_coma SENTENCIA_BOOLEANA P_coma DECLARACION_FOR
;
DECLARACION_FOR ::= 
    Identificador Op_atribucion Numero |
    Identificador Op_incremento | 
    Op_incremento Identificador
;

PROC ::= Proc Identificador Llave_a Identificador Identificador Llave_c Llave_a SENTENCIA Return Dolar Identificador Llave_c
;

SWITCH ::= Switch Identificador Llave_a SENTENCIA_SWITCH Llave_c |
Switch Identificador Llave_a SENTENCIA_SWITCH SENTENCIA_SWITCH Llave_c |
Switch Identificador Llave_a SENTENCIA_SWITCH SENTENCIA_SWITCH SENTENCIA_SWITCH Llave_c |
Switch Identificador Llave_a SENTENCIA_SWITCH SENTENCIA_SWITCH SENTENCIA_SWITCH SENTENCIA_SWITCH Llave_c |
Switch Identificador Llave_a SENTENCIA_SWITCH SENTENCIA_SWITCH SENTENCIA_SWITCH SENTENCIA_SWITCH SENTENCIA_SWITCH Llave_c |
Switch Identificador Llave_a SENTENCIA_SWITCH SENTENCIA_SWITCH SENTENCIA_SWITCH SENTENCIA_SWITCH SENTENCIA_SWITCH SENTENCIA_SWITCH Llave_c 
;

SENTENCIA_SWITCH ::= Comillas Numero Comillas Llave_a SENTENCIA Llave_c |
 Comillas Numero Comillas Llave_a Puts Identificador Identificador Identificador Identificador Identificador Identificador Llave_c  |
 Default Llave_a SENTENCIA Llave_c |
 Default Llave_a Puts Comillas Identificador Identificador Identificador Identificador Identificador Identificador Comillas Llave_c  
;



PRINT ::= Puts Comillas Identificador Comillas |
Puts Comillas SENTENCIA Comillas |
Puts Comillas Identificador Identificador Dolar Identificador Comillas |
Puts Comillas Identificador Identificador Identificador Identificador Dolar Identificador Comillas |
Puts Comillas Identificador Identificador Comillas |
Puts Comillas Identificador Identificador Identificador Comillas |
Puts Comillas Identificador Identificador Identificador Identificador Comillas |
Puts Comillas Identificador Identificador Identificador Identificador Identificador Dolar Identificador Comillas
;


